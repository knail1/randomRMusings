#Question 12.1

#Call package and set seed for reproducible results
library(FrF2)
set.seed(42)
         
#Run FrF2 function
FrF2(nruns = 16, nfactors = 10)

#Question 11.1

#Part 1 - Stepwise

#Read the crime data and scale
uscrime <- read.table("uscrime.txt", stringsAsFactors = FALSE, header = TRUE)
head(uscrime)
uscrime2 <- as.data.frame(scale(uscrime))
head(uscrime2)

#Backwards stepwise regression
model_1 <- lm(Crime~., data = uscrime2)
step(model_1, direction = "backward")

#Forwards stepwise regression
#Scope argument constricts the upper bounds which is necessary during forward stepwise
model_1 <- lm(Crime~1, data = uscrime2)
step(model_1, scope = formula(lm(Crime~.,data=uscrime2)), direction = "forward")

#Both forward and backwards stepwise regression
model_1 <- lm(Crime~., data = uscrime2)
step(model_1, scope = list(lower = formula(lm(Crime~1, data=uscrime2)),
                           upper = formula(lm(Crime~., data=uscrime2))),
                            direction = "both")

#Review the new model with certain factors removed
model_2 <- lm(formula = Crime~ M + Ed + Po1 + M.F + U1 + U2 + Ineq + Prob, data = uscrime2)
summary(model_2)

#Part 2 - LASSO

#Call package and set seed for reproducible results
library(glmnet)
set.seed(42)
#Run LASSO function by first converting data into a matrix. 5 Folds for cross validation. MSE automates the choice of the lambda value or "T"
model_lasso <-cv.glmnet(x=as.matrix(uscrime2[,-16]),
                        y=as.matrix(uscrime2[,16]),
                        alpha=1,
                        nfolds=5, 
                        type.measure = "mse",
                        family = "gaussian")
model_lasso
plot(model_lasso)

#Lambda min corresponds to the lowest cross validated mean squared error
model_lasso$lambda.min
cbind(model_lasso$lambda, model_lasso$cvm)

#As lambda increases so does MSE as seen by the plot below
plot(model_lasso$lambda, model_lasso$cvm)

#Determine which coefficients meet the threshold
coef(model_lasso, s = model_lasso$lambda.min)
coef(model_lasso)

#Review the new model with certain factors removed
model_3 <- lm(formula = Crime~ M + So + Ed + Po1 + LF + M.F + NW + U1 + U2 + Ineq + Prob, data = uscrime2)
summary(model_3)

#Part 3 - Elastic Net


#Perform cv.glmnet for 10 values in between 0 and 1
for (i in 1:10){
model.elasticnet <- cv.glmnet(x = as.matrix(uscrime2[,-16]),
                                y = as.matrix(uscrime2[,16]),
                                alpha = i/10,
                                nfolds = 5,
                                type.measure = "mse",
                                family = "gaussian")}
model.elasticnet

#Determine which coefficients meet the threshold
coef(model.elasticnet, s = model.elasticnet$lambda.min)
coef(model.elasticnet)

#Review the new model with certain factors removed
model_4 <- lm(formula = Crime~ M + Ed + Po1 + M.F + Ineq + Prob, data = uscrime2)
summary(model_4)
